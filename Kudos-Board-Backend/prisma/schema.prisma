// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model UpvotesOnPosts {
  post       Post     @relation(fields: [postId], references: [id])
  postId     Int // relation scalar field (used in the `@relation` attribute above)
  user       User     @relation(fields: [userId], references: [id])
  userId     Int // relation scalar field (used in the `@relation` attribute above)
  assignedAt DateTime @default(now())
  assignedBy String

  @@id([postId, userId])
}

model Post {
  id           Int              @id @default(autoincrement())
  createdAt    DateTime         @default(now())
  updatedAt    DateTime         @updatedAt
  title        String           @db.VarChar(255)
  published    Boolean          @default(true)
  imageUrl     String
  description  String
  upvotes      Int              @default(0)
  upvotedUsers UpvotesOnPosts[]
  author       User?            @relation(fields: [authorId], references: [id])
  authorId     Int?
  Board        Board?           @relation(fields: [boardId], references: [id])
  boardId      Int?
}

model Board {
  id          Int      @id @default(autoincrement())
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  title       String   @db.VarChar(255)
  description String
  imageUrl    String
  published   Boolean  @default(true)
  author      User?    @relation(fields: [authorId], references: [id])
  authorId    Int?
  posts       Post[]
  category    String
}

model Profile {
  id     Int     @id @default(autoincrement())
  bio    String?
  user   User    @relation(fields: [userId], references: [id])
  userId Int     @unique
}

model User {
  id       Int      @id @default(autoincrement())
  email    String   @unique
  password String?
  name     String
  boards   Board[]
  profile  Profile?
  Post     Post[]

  upvotedPosts UpvotesOnPosts[]
}
